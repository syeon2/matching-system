buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    // QueryDSL
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"

    // Doc
    id 'org.asciidoctor.jvm.convert' version '3.3.2'

    // Checkstyle
    id 'org.ec4j.editorconfig' version '0.0.3'
    id 'checkstyle'
}

group = 'project'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    // Application
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Persistence
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    // Util
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Network
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // Doc
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

// Doc
ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'

    sources {
        include("**/index.adoc")
    }

    baseDirFollowsSourceDir()
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}

// QueryDSL
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

// Checkstyle
editorconfig {
    excludes = ['build']
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/config/checkstyle/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/config/checkstyle/naver-checkstyle-suppressions.xml"]
    toolVersion = "10.12.2"

    sourceSets = [sourceSets.main]
}

checkstyleMain.source = fileTree('src/main/java')

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
